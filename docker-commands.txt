Containers

Your basic isolated Docker process. Containers are to Virtual Machines as threads are to processes. Or you can think of them as chroots on steroids.

Lifecycle

docker create creates a container but does not start it.
docker run creates and starts a container in one operation.
docker stop stops it.
docker start will start it again.
docker restart restarts a container.
docker rm deletes a container.
docker kill sends a SIGKILL to a container.
docker attach will connect to a running container.
docker wait blocks until container stops.
If you want to run and then interact with a container, docker start, then spawn a shell as described in Executing Commands.

If you want a transient container, docker run --rm will remove the container after it stops.

If you want to remove also the volumes associated with the container, the deletion of the container must include the -v switch like in docker --rm -v.

If you want to poke around in an image, docker run -t -i <myimage> <myshell> to open a tty.

If you want to poke around in a running container, docker exec -t -i <mycontainer> <myshell> to open a tty.

If you want to map a directory on the host to a docker container, docker run -v $HOSTDIR:$DOCKERDIR. Also see Volumes.

If you want to integrate a container with a host process manager, start the daemon with -r=false then use docker start -a.
